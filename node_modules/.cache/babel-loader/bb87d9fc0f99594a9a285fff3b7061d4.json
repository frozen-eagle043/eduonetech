{"ast":null,"code":"var _jsxFileName = \"/workspace/eduonetech/src/components/Profile.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Navbar from './Navbar';\nimport FriendsList from './Friendlist';\nimport firebase from 'firebase';\nimport { useAuth } from '../contexts/AuthContext.js';\nimport { useEffect } from 'react';\nimport app from '../firebase';\n\nfunction Profile() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [aboutMe1, setAboutMe1] = useState('');\n  const [interests, setInterests] = useState('');\n  const [formError, setFormError] = useState('');\n  const [aboutMe, setAboutMe] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n  const [lastLogin, setLastLogin] = useState(null); // Simulating a login event\n\n  const handleLogin = () => {\n    const now = new Date();\n    setLastLogin(now);\n  };\n\n  function Form() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleAddAboutMe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"First Name:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"first-name-input\",\n      value: firstName,\n      onChange: event => setFirstName(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"Last Name:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: lastName,\n      onChange: event => setLastName(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, \"About Me:\", /*#__PURE__*/React.createElement(\"textarea\", {\n      value: aboutMe1,\n      onChange: event => setAboutMe1(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, \"Interests:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: interests,\n      onChange: event => setInterests(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), formError && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, formError), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, \"UPDATE\")));\n  }\n\n  useEffect(() => {\n    // const currentUser = firebase.auth().currentUser;\n    const userId = app.auth().currentUser.uid; //const LoginDate = new Date();\n    //const currentUserRef = db.collection('users').doc(currentUser.uid);\n    //const AboutRef = db.collection('users').doc(userId);\n\n    const userRef = firebase.firestore().collection('users').doc(userId);\n    userRef.get().then(doc => {\n      if (doc.exists) {\n        const data = doc.data();\n        setAboutMe(data);\n      } else {\n        console.log('No such document!');\n      }\n    }).catch(error => {\n      console.log('Error getting document:', error);\n    });\n  }, []);\n\n  const handleAddAboutMe = e => {\n    //e.preventDefault();\n    // Check if any field is empty\n    if (!firstName || !lastName || !aboutMe || !interests) {\n      setFormError('Please fill in all fields.');\n      return;\n    }\n\n    const db = firebase.firestore();\n    const currentUserRef = db.collection('users').doc(currentUser.uid);\n    currentUserRef.set({\n      First: firstName,\n      Last: lastName,\n      email: currentUser.email,\n      loginDate: new Date(),\n      Aboutme: aboutMe1,\n      Interests: interests\n    }).then(() => {\n      console.log('About me  added successfully!');\n    }).catch(error => {\n      console.error('Error adding About me:', error);\n    });\n  }; // Generate random heatmap data\n\n\n  const generateHeatmapData = () => {\n    const today = new Date();\n    const yearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n    const data = [];\n\n    for (let date = yearAgo; date <= today; date.setDate(date.getDate() + 1)) {\n      const count = Math.floor(Math.random() * 4);\n      data.push({\n        date: new Date(date.getTime()),\n        count\n      });\n    }\n\n    return data;\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  const heatmapData = generateHeatmapData(); // Calculate number of empty days\n\n  const emptyDays = heatmapData.filter(data => data.count === 0).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://avatars.githubusercontent.com/u/14101776?v=4\",\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, aboutMe.First, \" \", aboutMe.Last))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"About Me\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Edit Details\"), showForm && /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 20\n    }\n  })), aboutMe.Aboutme)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"Daily Login Heatmap\"), lastLogin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Last login: \", lastLogin.toDateString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Empty days: \", emptyDays)), /*#__PURE__*/React.createElement(CalendarHeatmap, {\n    startDate: new Date('2022-04-01'),\n    endDate: new Date('2023-04-01'),\n    values: heatmapData,\n    showWeekdayLabels: true,\n    weekdayLabels: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FriendsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Profile;","map":{"version":3,"sources":["/workspace/eduonetech/src/components/Profile.js"],"names":["React","useState","CalendarHeatmap","Navbar","FriendsList","firebase","useAuth","useEffect","app","Profile","firstName","setFirstName","lastName","setLastName","aboutMe1","setAboutMe1","interests","setInterests","formError","setFormError","aboutMe","setAboutMe","currentUser","lastLogin","setLastLogin","handleLogin","now","Date","Form","handleAddAboutMe","event","target","value","color","userId","auth","uid","userRef","firestore","collection","doc","get","then","exists","data","console","log","catch","error","e","db","currentUserRef","set","First","Last","email","loginDate","Aboutme","Interests","generateHeatmapData","today","yearAgo","getFullYear","getMonth","getDate","date","setDate","count","Math","floor","random","push","getTime","showForm","setShowForm","toggleForm","heatmapData","emptyDays","filter","length","toDateString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Navbar from './Navbar';\nimport FriendsList from './Friendlist';\nimport firebase from 'firebase';\nimport { useAuth } from '../contexts/AuthContext.js';\nimport { useEffect } from 'react';\nimport app from '../firebase';\nfunction Profile() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [aboutMe1, setAboutMe1] = useState('');\n  const [interests, setInterests] = useState('');\n  const [formError, setFormError] = useState('');\n  const [aboutMe, setAboutMe] = useState([]);\n  const { currentUser } = useAuth();\n  const [lastLogin, setLastLogin] = useState(null);\n\n  // Simulating a login event\n  const handleLogin = () => {\n    const now = new Date();\n    setLastLogin(now);\n  };\n  function Form() {\n    return (\n      <div>\n      <form onSubmit={handleAddAboutMe}>\n      <label>\n        First Name:\n        <input\n          type=\"text\"\n          id=\"first-name-input\"\n          value={firstName}\n          onChange={(event) => setFirstName(event.target.value)}\n        />\n      </label>\n      <br />\n      <label>\n        Last Name:\n        <input\n          type=\"text\"\n          value={lastName}\n          onChange={(event) => setLastName(event.target.value)}\n        />\n      </label>\n      <br />\n      <label>\n        About Me:\n        <textarea\n          value={aboutMe1}\n          onChange={(event) => setAboutMe1(event.target.value)}\n        />\n      </label>\n      <br />\n      <label>\n        Interests:\n        <input\n          type=\"text\"\n          value={interests}\n          onChange={(event) => setInterests(event.target.value)}\n        />\n      </label>\n      <br />\n      {formError && <div style={{ color: 'red' }}>{formError}</div>}\n      <button type=\"submit\">UPDATE</button>\n    </form>\n      </div>\n    );\n  }\n  useEffect(() => {\n   // const currentUser = firebase.auth().currentUser;\n    const userId = app.auth().currentUser.uid;//const LoginDate = new Date();\n    //const currentUserRef = db.collection('users').doc(currentUser.uid);\n    //const AboutRef = db.collection('users').doc(userId);\n    const userRef = firebase.firestore().collection('users').doc(userId);\n\n    userRef.get().then((doc) => {\n      if (doc.exists) {\n        const data = doc.data();\n        setAboutMe(data);\n      } else {\n        console.log('No such document!');\n      }\n    }).catch((error) => {\n      console.log('Error getting document:', error);\n    });\n  }, []);\n  const handleAddAboutMe = (e) => {\n    //e.preventDefault();\n\n    // Check if any field is empty\n    if (!firstName || !lastName || !aboutMe || !interests) {\n      setFormError('Please fill in all fields.');\n      return;\n    }\n\n    const db = firebase.firestore();\n    const currentUserRef = db.collection('users').doc(currentUser.uid);\n    currentUserRef.set({\n        First: firstName,\n        Last: lastName,\n        email: currentUser.email,\n        loginDate: new Date(),\n        Aboutme: aboutMe1,\n        Interests: interests\n    })\n      .then(() => {\n        console.log('About me  added successfully!');\n      })\n      .catch((error) => {\n        console.error('Error adding About me:', error);\n      });\n  };\n  // Generate random heatmap data\n  const generateHeatmapData = () => {\n    const today = new Date();\n    const yearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n\n    const data = [];\n\n    for (let date = yearAgo; date <= today; date.setDate(date.getDate() + 1)) {\n      const count = Math.floor(Math.random() * 4);\n      data.push({\n        date: new Date(date.getTime()),\n        count,\n      });\n    }\n\n    return data;\n  };\n  const [showForm, setShowForm] = useState(false);\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n  const heatmapData = generateHeatmapData();\n\n  // Calculate number of empty days\n  const emptyDays = heatmapData.filter((data) => data.count === 0).length;\n\n  return (\n    <div className=\"container\">\n      <Navbar/>\n      <div className=\"profile\">\n        <img\n          className=\"avatar\"\n          src=\"https://avatars.githubusercontent.com/u/14101776?v=4\"\n          alt=\"avatar\"\n        />\n        <div>\n          <h1 className=\"username\">\n            {aboutMe.First} {aboutMe.Last}\n          </h1>\n        </div>\n\n      </div>\n\n      <div className=\"about-me\">\n        <h2 className=\"section-title\">About Me</h2>\n        <p>\n        <div>\n      <button onClick={toggleForm}>Edit Details</button>\n      {showForm && <Form />}\n    </div>\n          {aboutMe.Aboutme}\n        </p>\n      </div>\n\n      <div className=\"heatmap-container\">\n        <h2 className=\"section-title\">Daily Login Heatmap</h2>\n        {lastLogin && (\n          <div className=\"heatmap-info\">\n            <p>Last login: {lastLogin.toDateString()}</p>\n            <p>Empty days: {emptyDays}</p>\n          </div>\n        )}\n        <CalendarHeatmap\n          startDate={new Date('2022-04-01')}\n          endDate={new Date('2023-04-01')}\n          values={heatmapData}\n          showWeekdayLabels={true}\n          weekdayLabels={['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']}\n          onClick={handleLogin}\n        />\n      </div>\n      <FriendsList/>\n    </div>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}