{"ast":null,"code":"var _jsxFileName = \"/workspace/eduonetech/src/components/Friendlist.js\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport app from \"../firebase\";\n\nconst FriendsList = () => {\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    const currentUser = firebase.auth().currentUser;\n    const userId = app.auth().currentUser.uid; //const LoginDate = new Date();\n\n    const db = app.firestore(); //const currentUserRef = db.collection('users').doc(currentUser.uid);\n\n    const friendRef = db.collection('users').doc(currentUser.uid); //const friendsRef = firebase.firestore().collection(\"friends\");\n    // Query all friends for the logged-in user\n\n    const query = friendRef.where(\"email\", \"==\", currentUser.email);\n    query.get().then(querySnapshot => {\n      const results = [];\n      querySnapshot.forEach(doc => {\n        results.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n    }).catch(error => {\n      console.error('Error searching for users:', error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Friends List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, friends.map(friend => /*#__PURE__*/React.createElement(\"li\", {\n    key: friend.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, friend.email)))));\n};\n\nexport default FriendsList;","map":{"version":3,"sources":["/workspace/eduonetech/src/components/Friendlist.js"],"names":["React","useState","useEffect","firebase","app","FriendsList","friends","setFriends","currentUser","auth","userId","uid","db","firestore","friendRef","collection","doc","query","where","email","get","then","querySnapshot","results","forEach","push","id","data","catch","error","console","map","friend"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AAEA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAGL,QAAQ,CAACM,IAAT,GAAgBD,WAApC;AACA,UAAME,MAAM,GAAGN,GAAG,CAACK,IAAJ,GAAWD,WAAX,CAAuBG,GAAtC,CAFc,CAE4B;;AAC1C,UAAMC,EAAE,GAAGR,GAAG,CAACS,SAAJ,EAAX,CAHc,CAId;;AACA,UAAMC,SAAS,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BR,WAAW,CAACG,GAAvC,CAAlB,CALc,CAMd;AAEA;;AACA,UAAMM,KAAK,GAAGH,SAAS,CAACI,KAAV,CAAgB,OAAhB,EAAyB,IAAzB,EAA+BV,WAAW,CAACW,KAA3C,CAAd;AACAF,IAAAA,KAAK,CAACG,GAAN,GAAYC,IAAZ,CAAkBC,aAAD,IAAmB;AAChC,YAAMC,OAAO,GAAG,EAAhB;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBR,GAAD,IAAS;AAC7BO,QAAAA,OAAO,CAACE,IAAR,CAAa;AAAEC,UAAAA,EAAE,EAAEV,GAAG,CAACU,EAAV;AAAc,aAAGV,GAAG,CAACW,IAAJ;AAAjB,SAAb;AACD,OAFD;AAGD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACD,KARH;AAWD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,OAAO,CAACyB,GAAR,CAAaC,MAAD,iBACX;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,MAAM,CAACb,KAAd,CADF,CADD,CADH,CAFF,CADF;AAYD,CAtCD;;AAwCA,eAAed,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport app from \"../firebase\";\n\nconst FriendsList = () => {\n  const [friends, setFriends] = useState([]);\n  \n  useEffect(() => {\n    const currentUser = firebase.auth().currentUser;\n    const userId = app.auth().currentUser.uid;//const LoginDate = new Date();\n    const db = app.firestore()\n    //const currentUserRef = db.collection('users').doc(currentUser.uid);\n    const friendRef = db.collection('users').doc(currentUser.uid);\n    //const friendsRef = firebase.firestore().collection(\"friends\");\n\n    // Query all friends for the logged-in user\n    const query = friendRef.where(\"email\", \"==\", currentUser.email);\n    query.get().then((querySnapshot) => {\n        const results = [];\n        querySnapshot.forEach((doc) => {\n          results.push({ id: doc.id, ...doc.data() });\n        });\n      })\n      .catch((error) => {\n        console.error('Error searching for users:', error);\n      });\n\n\n  }, []);\n\n  return (\n    <div>\n      <h2>Friends List</h2>\n      <ul>\n        {friends.map((friend) => (\n          <li key={friend.id}>\n            <span>{friend.email}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FriendsList;\n"]},"metadata":{},"sourceType":"module"}