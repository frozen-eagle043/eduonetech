{"ast":null,"code":"var _jsxFileName = \"/workspace/eduonetech/src/components/Profile.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Navbar from './Navbar';\nimport FriendsList from './Friendlist';\nimport firebase from 'firebase';\nimport { useAuth } from '../contexts/AuthContext.js';\nimport { useEffect } from 'react';\nimport app from '../firebase';\n\nfunction Profile() {\n  const [aboutMe, setAboutMe] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n  const [lastLogin, setLastLogin] = useState(null); // Simulating a login event\n\n  const handleLogin = () => {\n    const now = new Date();\n    setLastLogin(now);\n  };\n\n  useEffect(() => {\n    const results = []; // const currentUser = firebase.auth().currentUser;\n\n    const userId = app.auth().currentUser.uid; //const LoginDate = new Date();\n\n    const db = app.firestore(); //const currentUserRef = db.collection('users').doc(currentUser.uid);\n\n    const AboutRef = db.collection('users').doc(userId); //const friendsRef = firebase.firestore().collection(\"friends\");\n    // Query all friends for the logged-in user\n\n    const query = AboutRef;\n    query.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        results.push({\n          id: doc.id,\n          ...doc.data()\n        });\n        console.log(results);\n      });\n      setAboutMe(results);\n    }).catch(error => {\n      console.error('Error searching for users:', error);\n    });\n  }, []);\n\n  const handleAddAboutMe = text => {\n    const db = firebase.firestore();\n    const currentUserRef = db.collection('users').doc(currentUser.uid);\n    currentUserRef.set({\n      Aboutme: text\n    }).then(() => {\n      console.log('About me  added successfully!');\n    }).catch(error => {\n      console.error('Error adding About me:', error);\n    });\n  }; // Generate random heatmap data\n\n\n  const generateHeatmapData = () => {\n    const today = new Date();\n    const yearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n    const data = [];\n\n    for (let date = yearAgo; date <= today; date.setDate(date.getDate() + 1)) {\n      const count = Math.floor(Math.random() * 4);\n      data.push({\n        date: new Date(date.getTime()),\n        count\n      });\n    }\n\n    return data;\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  const heatmapData = generateHeatmapData(); // Calculate number of empty days\n\n  const emptyDays = heatmapData.filter(data => data.count === 0).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://avatars.githubusercontent.com/u/14101776?v=4\",\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"John Doe\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"About Me\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Open Form\"), showForm && /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 20\n    }\n  })), aboutMe.Aboutme)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Daily Login Heatmap\"), lastLogin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Last login: \", lastLogin.toDateString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Empty days: \", emptyDays)), /*#__PURE__*/React.createElement(CalendarHeatmap, {\n    startDate: new Date('2022-04-01'),\n    endDate: new Date('2023-04-01'),\n    values: heatmapData,\n    showWeekdayLabels: true,\n    weekdayLabels: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FriendsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Profile;","map":{"version":3,"sources":["/workspace/eduonetech/src/components/Profile.js"],"names":["React","useState","CalendarHeatmap","Navbar","FriendsList","firebase","useAuth","useEffect","app","Profile","aboutMe","setAboutMe","currentUser","lastLogin","setLastLogin","handleLogin","now","Date","results","userId","auth","uid","db","firestore","AboutRef","collection","doc","query","get","then","querySnapshot","forEach","push","id","data","console","log","catch","error","handleAddAboutMe","text","currentUserRef","set","Aboutme","generateHeatmapData","today","yearAgo","getFullYear","getMonth","getDate","date","setDate","count","Math","floor","random","getTime","showForm","setShowForm","toggleForm","heatmapData","emptyDays","filter","length","toDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAO,wCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AACA,SAASC,OAAT,GAAmB;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBN,OAAO,EAA/B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C,CAHiB,CAKjB;;AACA,QAAMc,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACAH,IAAAA,YAAY,CAACE,GAAD,CAAZ;AACD,GAHD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,EAAhB,CADc,CAEf;;AACC,UAAMC,MAAM,GAAGX,GAAG,CAACY,IAAJ,GAAWR,WAAX,CAAuBS,GAAtC,CAHc,CAG4B;;AAC1C,UAAMC,EAAE,GAAGd,GAAG,CAACe,SAAJ,EAAX,CAJc,CAKd;;AACA,UAAMC,QAAQ,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BP,MAA3B,CAAjB,CANc,CAOd;AAEA;;AACA,UAAMQ,KAAK,GAAGH,QAAd;AACAG,IAAAA,KAAK,CAACC,GAAN,GAAYC,IAAZ,CAAkBC,aAAD,IAAmB;AAEhCA,MAAAA,aAAa,CAACC,OAAd,CAAuBL,GAAD,IAAS;AAC7BR,QAAAA,OAAO,CAACc,IAAR,CAAa;AAAEC,UAAAA,EAAE,EAAEP,GAAG,CAACO,EAAV;AAAc,aAAGP,GAAG,CAACQ,IAAJ;AAAjB,SAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACD,OAHD;AAKAP,MAAAA,UAAU,CAACO,OAAD,CAAV;AACD,KARH,EASGmB,KATH,CASUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACD,KAXH;AAcD,GAzBQ,EAyBN,EAzBM,CAAT;;AA0BA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjC,UAAMlB,EAAE,GAAGjB,QAAQ,CAACkB,SAAT,EAAX;AACA,UAAMkB,cAAc,GAAGnB,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2Bd,WAAW,CAACS,GAAvC,CAAvB;AACAoB,IAAAA,cAAc,CAACC,GAAf,CAAmB;AACfC,MAAAA,OAAO,EAAEH;AADM,KAAnB,EAGGX,IAHH,CAGQ,MAAM;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD,KARH;AASD,GAZD,CApCiB,CAiDjB;;;AACA,QAAMM,mBAAmB,GAAG,MAAM;AAChC,UAAMC,KAAK,GAAG,IAAI5B,IAAJ,EAAd;AACA,UAAM6B,OAAO,GAAG,IAAI7B,IAAJ,CAAS4B,KAAK,CAACE,WAAN,KAAsB,CAA/B,EAAkCF,KAAK,CAACG,QAAN,EAAlC,EAAoDH,KAAK,CAACI,OAAN,EAApD,CAAhB;AAEA,UAAMf,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIgB,IAAI,GAAGJ,OAAhB,EAAyBI,IAAI,IAAIL,KAAjC,EAAwCK,IAAI,CAACC,OAAL,CAAaD,IAAI,CAACD,OAAL,KAAiB,CAA9B,CAAxC,EAA0E;AACxE,YAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAd;AACArB,MAAAA,IAAI,CAACF,IAAL,CAAU;AACRkB,QAAAA,IAAI,EAAE,IAAIjC,IAAJ,CAASiC,IAAI,CAACM,OAAL,EAAT,CADE;AAERJ,QAAAA;AAFQ,OAAV;AAID;;AAED,WAAOlB,IAAP;AACD,GAfD;;AAgBA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BzD,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM0D,UAAU,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAGA,QAAMG,WAAW,GAAGhB,mBAAmB,EAAvC,CAvEiB,CAyEjB;;AACA,QAAMiB,SAAS,GAAGD,WAAW,CAACE,MAAZ,CAAoB5B,IAAD,IAAUA,IAAI,CAACkB,KAAL,KAAe,CAA5C,EAA+CW,MAAjE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,GAAG,EAAC,sDAFN;AAGE,IAAA,GAAG,EAAC,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CANF,CAFF,eAcE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAQ,IAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADE,EAEDF,QAAQ,iBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFX,CADA,EAKG/C,OAAO,CAACiC,OALX,CAFF,CAdF,eAyBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEG9B,SAAS,iBACR;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,SAAS,CAACmD,YAAV,EAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBH,SAAhB,CAFF,CAHJ,eAQE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAE,IAAI5C,IAAJ,CAAS,YAAT,CADb;AAEE,IAAA,OAAO,EAAE,IAAIA,IAAJ,CAAS,YAAT,CAFX;AAGE,IAAA,MAAM,EAAE2C,WAHV;AAIE,IAAA,iBAAiB,EAAE,IAJrB;AAKE,IAAA,aAAa,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CALjB;AAME,IAAA,OAAO,EAAE7C,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAzBF,eA0CE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CF,CADF;AA8CD;;AAED,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Navbar from './Navbar';\nimport FriendsList from './Friendlist';\nimport firebase from 'firebase';\nimport { useAuth } from '../contexts/AuthContext.js';\nimport { useEffect } from 'react';\nimport app from '../firebase';\nfunction Profile() {\n  const [aboutMe, setAboutMe] = useState([]);\n  const { currentUser } = useAuth();\n  const [lastLogin, setLastLogin] = useState(null);\n\n  // Simulating a login event\n  const handleLogin = () => {\n    const now = new Date();\n    setLastLogin(now);\n  };\n  useEffect(() => {\n    const results = [];\n   // const currentUser = firebase.auth().currentUser;\n    const userId = app.auth().currentUser.uid;//const LoginDate = new Date();\n    const db = app.firestore()\n    //const currentUserRef = db.collection('users').doc(currentUser.uid);\n    const AboutRef = db.collection('users').doc(userId);\n    //const friendsRef = firebase.firestore().collection(\"friends\");\n\n    // Query all friends for the logged-in user\n    const query = AboutRef\n    query.get().then((querySnapshot) => {\n        \n        querySnapshot.forEach((doc) => {\n          results.push({ id: doc.id, ...doc.data() });\n          console.log(results)\n        });\n  \n        setAboutMe(results);\n      })\n      .catch((error) => {\n        console.error('Error searching for users:', error);\n      });\n\n\n  }, []);\n  const handleAddAboutMe = (text) => {\n    const db = firebase.firestore();\n    const currentUserRef = db.collection('users').doc(currentUser.uid);\n    currentUserRef.set({\n        Aboutme: text\n    })\n      .then(() => {\n        console.log('About me  added successfully!');\n      })\n      .catch((error) => {\n        console.error('Error adding About me:', error);\n      });\n  };\n  // Generate random heatmap data\n  const generateHeatmapData = () => {\n    const today = new Date();\n    const yearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n\n    const data = [];\n\n    for (let date = yearAgo; date <= today; date.setDate(date.getDate() + 1)) {\n      const count = Math.floor(Math.random() * 4);\n      data.push({\n        date: new Date(date.getTime()),\n        count,\n      });\n    }\n\n    return data;\n  };\n  const [showForm, setShowForm] = useState(false);\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n  const heatmapData = generateHeatmapData();\n\n  // Calculate number of empty days\n  const emptyDays = heatmapData.filter((data) => data.count === 0).length;\n\n  return (\n    <div className=\"container\">\n      <Navbar/>\n      <div className=\"profile\">\n        <img\n          className=\"avatar\"\n          src=\"https://avatars.githubusercontent.com/u/14101776?v=4\"\n          alt=\"avatar\"\n        />\n        <div>\n          <h1 className=\"username\">John Doe</h1>\n        </div>\n\n      </div>\n\n      <div className=\"about-me\">\n        <h2 className=\"section-title\">About Me</h2>\n        <p>\n        <div>\n      <button onClick={toggleForm}>Open Form</button>\n      {showForm && <Form />}\n    </div>\n          {aboutMe.Aboutme}\n        </p>\n      </div>\n\n      <div className=\"heatmap-container\">\n        <h2 className=\"section-title\">Daily Login Heatmap</h2>\n        {lastLogin && (\n          <div className=\"heatmap-info\">\n            <p>Last login: {lastLogin.toDateString()}</p>\n            <p>Empty days: {emptyDays}</p>\n          </div>\n        )}\n        <CalendarHeatmap\n          startDate={new Date('2022-04-01')}\n          endDate={new Date('2023-04-01')}\n          values={heatmapData}\n          showWeekdayLabels={true}\n          weekdayLabels={['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']}\n          onClick={handleLogin}\n        />\n      </div>\n      <FriendsList/>\n    </div>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}