{"ast":null,"code":"var _jsxFileName = \"/workspace/eduonetech/src/components/Profile.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Navbar from './Navbar';\nimport FriendsList from './Friendlist';\nimport firebase from 'firebase';\n\nfunction Profile() {\n  const [lastLogin, setLastLogin] = useState(null); // Simulating a login event\n\n  const handleLogin = () => {\n    const now = new Date();\n    setLastLogin(now);\n  };\n\n  const handleAddAboutMe = text => {\n    const db = firebase.firestore();\n    const currentUserRef = db.collection('users').doc(currentUser.uid);\n    currentUserRef.set({\n      Aboutme: text\n    }).then(() => {\n      console.log('Friend added successfully!');\n    }).catch(error => {\n      console.error('Error adding friend:', error);\n    });\n  }; // Generate random heatmap data\n\n\n  const generateHeatmapData = () => {\n    const today = new Date();\n    const yearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n    const data = [];\n\n    for (let date = yearAgo; date <= today; date.setDate(date.getDate() + 1)) {\n      const count = Math.floor(Math.random() * 4);\n      data.push({\n        date: new Date(date.getTime()),\n        count\n      });\n    }\n\n    return data;\n  };\n\n  const heatmapData = generateHeatmapData(); // Calculate number of empty days\n\n  const emptyDays = heatmapData.filter(data => data.count === 0).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://avatars.githubusercontent.com/u/14101776?v=4\",\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"John Doe\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"about-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"About Me\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pulvinar euismod nisi, a sagittis eros imperdiet ut. Sed in elementum nulla. Curabitur pellentesque lorem ut eleifend tincidunt. Sed auctor nisl eu quam suscipit, vel hendrerit sapien fringilla. Proin iaculis tristique odio, eu imperdiet lorem. Vivamus quis sem vel sapien vehicula fringilla vitae a felis.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Daily Login Heatmap\"), lastLogin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Last login: \", lastLogin.toDateString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Empty days: \", emptyDays)), /*#__PURE__*/React.createElement(CalendarHeatmap, {\n    startDate: new Date('2022-04-01'),\n    endDate: new Date('2023-04-01'),\n    values: heatmapData,\n    showWeekdayLabels: true,\n    weekdayLabels: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FriendsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Profile;","map":{"version":3,"sources":["/workspace/eduonetech/src/components/Profile.js"],"names":["React","useState","CalendarHeatmap","Navbar","FriendsList","firebase","Profile","lastLogin","setLastLogin","handleLogin","now","Date","handleAddAboutMe","text","db","firestore","currentUserRef","collection","doc","currentUser","uid","set","Aboutme","then","console","log","catch","error","generateHeatmapData","today","yearAgo","getFullYear","getMonth","getDate","data","date","setDate","count","Math","floor","random","push","getTime","heatmapData","emptyDays","filter","length","toDateString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport Navbar from './Navbar';\nimport FriendsList from './Friendlist';\nimport firebase from 'firebase';\nfunction Profile() {\n  \n  const [lastLogin, setLastLogin] = useState(null);\n\n  // Simulating a login event\n  const handleLogin = () => {\n    const now = new Date();\n    setLastLogin(now);\n  };\n  const handleAddAboutMe = (text) => {\n    const db = firebase.firestore();\n    const currentUserRef = db.collection('users').doc(currentUser.uid);\n    currentUserRef.set({\n        Aboutme: text\n    })\n      .then(() => {\n        console.log('Friend added successfully!');\n      })\n      .catch((error) => {\n        console.error('Error adding friend:', error);\n      });\n  };\n  // Generate random heatmap data\n  const generateHeatmapData = () => {\n    const today = new Date();\n    const yearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n\n    const data = [];\n\n    for (let date = yearAgo; date <= today; date.setDate(date.getDate() + 1)) {\n      const count = Math.floor(Math.random() * 4);\n      data.push({\n        date: new Date(date.getTime()),\n        count,\n      });\n    }\n\n    return data;\n  };\n\n  const heatmapData = generateHeatmapData();\n\n  // Calculate number of empty days\n  const emptyDays = heatmapData.filter((data) => data.count === 0).length;\n\n  return (\n    <div className=\"container\">\n      <Navbar/>\n      <div className=\"profile\">\n        <img\n          className=\"avatar\"\n          src=\"https://avatars.githubusercontent.com/u/14101776?v=4\"\n          alt=\"avatar\"\n        />\n        <div>\n          <h1 className=\"username\">John Doe</h1>\n          <p className=\"bio\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </div>\n      </div>\n\n      <div className=\"about-me\">\n        <h2 className=\"section-title\">About Me</h2>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pulvinar euismod nisi, a\n          sagittis eros imperdiet ut. Sed in elementum nulla. Curabitur pellentesque lorem ut\n          eleifend tincidunt. Sed auctor nisl eu quam suscipit, vel hendrerit sapien fringilla.\n          Proin iaculis tristique odio, eu imperdiet lorem. Vivamus quis sem vel sapien vehicula\n          fringilla vitae a felis.\n        </p>\n      </div>\n\n      <div className=\"heatmap-container\">\n        <h2 className=\"section-title\">Daily Login Heatmap</h2>\n        {lastLogin && (\n          <div className=\"heatmap-info\">\n            <p>Last login: {lastLogin.toDateString()}</p>\n            <p>Empty days: {emptyDays}</p>\n          </div>\n        )}\n        <CalendarHeatmap\n          startDate={new Date('2022-04-01')}\n          endDate={new Date('2023-04-01')}\n          values={heatmapData}\n          showWeekdayLabels={true}\n          weekdayLabels={['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']}\n          onClick={handleLogin}\n        />\n      </div>\n      <FriendsList/>\n    </div>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}