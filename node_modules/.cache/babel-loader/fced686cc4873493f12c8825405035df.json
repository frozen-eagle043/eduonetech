{"ast":null,"code":"var _jsxFileName = \"/workspace/eduonetech/src/components/Profile.js\";\nimport { useState, useEffect } from \"react\";\nimport Heatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"./styles.css\";\n\nconst generateRandomData = days => {\n  const today = new Date();\n  const endDate = new Date(today);\n  endDate.setDate(today.getDate() - 1);\n  const startDate = new Date(today);\n  startDate.setDate(today.getDate() - days);\n  const dates = [];\n  let currentDate = startDate;\n\n  while (currentDate <= endDate) {\n    dates.push(currentDate.toISOString());\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return dates.map(date => ({\n    date,\n    count: Math.floor(Math.random() * 4)\n  }));\n};\n\nconst Profile = () => {\n  const [userData, setUserData] = useState(null);\n  const [heatmapData, setHeatmapData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://api.github.com/users/USERNAME\");\n      const data = await response.json();\n      setUserData(data);\n      const heatmapData = generateRandomData(365);\n      setHeatmapData(heatmapData);\n    };\n\n    fetchData();\n  }, []);\n  const {\n    name,\n    login,\n    avatar_url,\n    bio,\n    html_url,\n    created_at,\n    last_login\n  } = userData || {};\n  const emptyDays = heatmapData.filter(day => day.count === 0).length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, userData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar_url,\n    alt: \"Avatar\",\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, name || login), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, bio), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, \"Followers\"), userData.followers), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, \"Following\"), userData.following), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Repos\"), userData.public_repos)))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"about-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"About Me\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, bio)), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"heatmap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Activity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heatmap, {\n    startDate: new Date(heatmapData[0].date),\n    endDate: new Date(heatmapData[heatmapData.length - 1].date),\n    values: heatmapData,\n    classForValue: value => {\n      if (!value) {\n        return \"color-empty\";\n      }\n\n      return `color-github-${value.count}`;\n    },\n    showWeekdayLabels: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), last_login && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heatmap-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Last login: \", new Date(last_login).toDateString()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"Empty days: \", emptyDays))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Loading...\"));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/workspace/eduonetech/src/components/Profile.js"],"names":["useState","useEffect","Heatmap","generateRandomData","days","today","Date","endDate","setDate","getDate","startDate","dates","currentDate","push","toISOString","map","date","count","Math","floor","random","Profile","userData","setUserData","heatmapData","setHeatmapData","fetchData","response","fetch","data","json","name","login","avatar_url","bio","html_url","created_at","last_login","emptyDays","filter","day","length","followers","following","public_repos","value","toDateString"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,wCAAP;AACA,OAAO,cAAP;;AAEA,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACnC,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,OAAO,GAAG,IAAID,IAAJ,CAASD,KAAT,CAAhB;AACAE,EAAAA,OAAO,CAACC,OAAR,CAAgBH,KAAK,CAACI,OAAN,KAAkB,CAAlC;AACA,QAAMC,SAAS,GAAG,IAAIJ,IAAJ,CAASD,KAAT,CAAlB;AACAK,EAAAA,SAAS,CAACF,OAAV,CAAkBH,KAAK,CAACI,OAAN,KAAkBL,IAApC;AAEA,QAAMO,KAAK,GAAG,EAAd;AACA,MAAIC,WAAW,GAAGF,SAAlB;;AACA,SAAOE,WAAW,IAAIL,OAAtB,EAA+B;AAC7BI,IAAAA,KAAK,CAACE,IAAN,CAAWD,WAAW,CAACE,WAAZ,EAAX;AACAF,IAAAA,WAAW,CAACJ,OAAZ,CAAoBI,WAAW,CAACH,OAAZ,KAAwB,CAA5C;AACD;;AAED,SAAOE,KAAK,CAACI,GAAN,CAAWC,IAAD,KAAW;AAC1BA,IAAAA,IAD0B;AAE1BC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B;AAFmB,GAAX,CAAV,CAAP;AAID,CAlBD;;AAoBA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,WAAW,CAACM,IAAD,CAAX;AAEA,YAAML,WAAW,GAAGrB,kBAAkB,CAAC,GAAD,CAAtC;AACAsB,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD,KAPD;;AASAE,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA,GAA3B;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,UAA1C;AAAsDC,IAAAA;AAAtD,MACJf,QAAQ,IAAI,EADd;AAGA,QAAMgB,SAAS,GAAGd,WAAW,CAACe,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACvB,KAAJ,KAAc,CAA1C,EAA6CwB,MAA/D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QAAQ,gBACP,uDACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEW,UAAV;AAAsB,IAAA,GAAG,EAAC,QAA1B;AAAmC,IAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BF,IAAI,IAAIC,KAAlC,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBE,GAApB,CAFF,eAGE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGZ,QAAQ,CAACoB,SAFZ,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGpB,QAAQ,CAACqB,SAFZ,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGrB,QAAQ,CAACsB,YAFZ,CATF,CAHF,CAFF,CADF,eAuBE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,GAAJ,CAFF,CAvBF,eA4BE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAE,IAAI5B,IAAJ,CAASkB,WAAW,CAAC,CAAD,CAAX,CAAeR,IAAxB,CADb;AAEE,IAAA,OAAO,EAAE,IAAIV,IAAJ,CAASkB,WAAW,CAACA,WAAW,CAACiB,MAAZ,GAAqB,CAAtB,CAAX,CAAoCzB,IAA7C,CAFX;AAGE,IAAA,MAAM,EAAEQ,WAHV;AAIE,IAAA,aAAa,EAAGqB,KAAD,IAAW;AACxB,UAAI,CAACA,KAAL,EAAY;AACV,eAAO,aAAP;AACD;;AACD,aAAQ,gBAAeA,KAAK,CAAC5B,KAAM,EAAnC;AACD,KATH;AAUE,IAAA,iBAAiB,EAAE,IAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGoB,UAAU,iBACT;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgB,IAAI/B,IAAJ,CAAS+B,UAAT,EAAqBS,YAArB,EAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBR,SAAhB,CAFF,CAdJ,CAFF,CA5BF,CADO,gBAsDP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvDJ,CADF;AA4DD,CAlFD;;AAoFA,eAAejB,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Heatmap from \"react-calendar-heatmap\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"./styles.css\";\n\nconst generateRandomData = (days) => {\n  const today = new Date();\n  const endDate = new Date(today);\n  endDate.setDate(today.getDate() - 1);\n  const startDate = new Date(today);\n  startDate.setDate(today.getDate() - days);\n\n  const dates = [];\n  let currentDate = startDate;\n  while (currentDate <= endDate) {\n    dates.push(currentDate.toISOString());\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return dates.map((date) => ({\n    date,\n    count: Math.floor(Math.random() * 4),\n  }));\n};\n\nconst Profile = () => {\n  const [userData, setUserData] = useState(null);\n  const [heatmapData, setHeatmapData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://api.github.com/users/USERNAME\");\n      const data = await response.json();\n      setUserData(data);\n\n      const heatmapData = generateRandomData(365);\n      setHeatmapData(heatmapData);\n    };\n\n    fetchData();\n  }, []);\n\n  const { name, login, avatar_url, bio, html_url, created_at, last_login } =\n    userData || {};\n\n  const emptyDays = heatmapData.filter((day) => day.count === 0).length;\n\n  return (\n    <div className=\"container\">\n      {userData ? (\n        <>\n          <section className=\"profile\">\n            <img src={avatar_url} alt=\"Avatar\" className=\"avatar\" />\n            <div>\n              <h1 className=\"username\">{name || login}</h1>\n              <p className=\"bio\">{bio}</p>\n              <ul className=\"stats\">\n                <li>\n                  <strong>Followers</strong>\n                  {userData.followers}\n                </li>\n                <li>\n                  <strong>Following</strong>\n                  {userData.following}\n                </li>\n                <li>\n                  <strong>Repos</strong>\n                  {userData.public_repos}\n                </li>\n              </ul>\n            </div>\n          </section>\n\n          <section className=\"about-me\">\n            <h2 className=\"section-title\">About Me</h2>\n            <p>{bio}</p>\n          </section>\n\n          <section className=\"heatmap\">\n            <h2 className=\"section-title\">Activity</h2>\n            <div className=\"heatmap-container\">\n              <Heatmap\n                startDate={new Date(heatmapData[0].date)}\n                endDate={new Date(heatmapData[heatmapData.length - 1].date)}\n                values={heatmapData}\n                classForValue={(value) => {\n                  if (!value) {\n                    return \"color-empty\";\n                  }\n                  return `color-github-${value.count}`;\n                }}\n                showWeekdayLabels={true}\n              />\n              {last_login && (\n                <div className=\"heatmap-info\">\n                  <p>Last login: {new Date(last_login).toDateString()}</p>\n                  <p>Empty days: {emptyDays}</p>\n                </div>\n              )}\n            </div>\n          </section>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}